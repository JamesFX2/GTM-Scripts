<script>
    // script that increments a cookie based counter based on how many visits they've made to the site without converting. 
    //  Modification exists for any goal completions
  var po_sessions = {

    visitCookie: '_siteVisits',
    liveCookie: '_liveSession',
    formPhase2: 'booking2.chillfactore.com',
    formPhase2Reached: function() {
      return (window.location.href.indexOf(this.formPhase2) > -1);
    },
    formCookie: '_formSession',
    transactionCompleteURL: '/confirmation.aspx', 
    transactionCompleted: function() { 
      return (window.location.href.indexOf(this.transactionCompleteURL) > -1);
    },
    eraseCookie: function(name) 
    {
      this.createCookie(name, "", -1);
    },    
    readCookie: function(name) 
    {
      var nameEQ = name + "=";
      var ca = document.cookie.split(';');
      for (var i = 0; i < ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') c = c.substring(1, c.length);
        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
      }
      return null;

    },
    updateCookie: function(name, initValue, days) {
      if (this.readCookie(name) !== null) {
        var value = this.readCookie(name);
        this.createCookie(name, value, days);
      } else {
        this.createCookie(name, initValue, days);
      }
    },
    createCookie: function(name, value, days) {
      if (days) {
        var date = new Date();
        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
        var expires = "; expires=" + date.toGMTString();
      } else var expires = "";
      document.cookie = name + "=" + value + expires + "; path=/";
    },
    fireVisitCookie: function(name)  {
      var cookieVisits = this.readCookie(name);
      var totalVisits = cookieVisits ? parseInt(cookieVisits) : 0;
      this.createCookie(name,totalVisits+1,120);     
    },    
    initialise: function() 
    {
      
      if(this.liveSession() == null)
      {
        this.fireVisitCookie(this.visitCookie);
      }
      this.updateCookie(this.liveCookie,1,0);
      
      if(this.liveSession() == 1 && this.formPhase2Reached())
      {
        this.fireVisitCookie(this.formCookie);
        console.log("debug");
        this.updateCookie(this.liveCookie,2,0);
      }
      if(this.transactionCompleted())
      {
        this.eraseCookie(this.visitCookie);
        this.eraseCookie(this.formCookie);
      }
      return true;
    },
    liveSession: function() { 
		return this.readCookie(this.liveCookie);
    },
    sessionCounter: function() {
		return this.readCookie(this.visitCookie);
    },
    formCounter: function() {
		return this.readCookie(this.formCookie);
    }
  };
  
  po_sessions.initialise();
  


  </script>
